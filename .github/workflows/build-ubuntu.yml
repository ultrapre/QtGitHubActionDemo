name: build-ubuntu
on: 
  push:

jobs:
  build-test:
    name: Build the project on ubuntu platform with Qt5
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04, ubuntu-20.04]
    steps:
      - name: Update system
        id: UpdateSystem
        run: sudo apt-get update --fix-missing -y
      - name: Install g++
        id: InstallGxx
        run: sudo apt-get install gcc g++ -y
      - name: Install gl1
        id: Installgl1
        run: sudo apt-get install libgl1-mesa-dev -y
      - name: Install make
        id: InstallMake
        run: sudo apt-get install make -y
      - name: Install Qt
        id: InstallQt
        run: sudo apt-get install qt5-default libqt5websockets5 libqt5websockets5-dev libqt5serialport5 libqt5serialport5-dev -y
      - name: Install QtCharts
        id: InstallQtCharts
        # Qt 5.5 has no charts module.
        if: ${{ matrix.os != 'ubuntu-16.04' }}
        run: sudo apt-get install libqt5charts5 libqt5charts5-dev -y
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Build project
        id: BuildPorject
        run: qmake && make
        
      - name: Deploy
        continue-on-error: true
        env:
          outputdir: QtGitHubActionDemo-${{ steps.latest_release_info.outputs.tag_name }}-for-linux-x64
          #linuxdeployqt_url: https://github.com/probonopd/linuxdeployqt/releases/download/6/linuxdeployqt-6-x86_64.AppImage
          linuxdeployqt_url: https://github.com/probonopd/linuxdeployqt/releases/download/7/linuxdeployqt-7-x86_64.AppImage
          linuxdeployqt: linuxdeployqt-7-x86_64.AppImage
        run: |
          export PATH=$PATH:$PWD
          echo $PATH
          pwd
          mkdir ${{ env.outputdir }}
          cp QtGitHubActionDemo ${{ env.outputdir }}
          wget ${{ env.linuxdeployqt_url }}
          ls -l
          chmod a+x ${{ env.linuxdeployqt }}
          ./${{ env.linuxdeployqt }} -version
          ./${{ env.linuxdeployqt }} ${{ env.outputdir }}/QtGitHubActionDemo -appimage
          
      - name: Packet with tar
        env:
          outputdir: QtGitHubActionDemo-${{ steps.latest_release_info.outputs.tag_name }}-for-linux-x64
        run: |
            tar -zcvf ${{ env.outputdir }}.tar.gz ${{ env.outputdir }}
            ls -l
      
      - name: artifacts
        env:
          outputdir: QtGitHubActionDemo-${{ steps.latest_release_info.outputs.tag_name }}-for-linux-x64
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.outputdir }}
          path: ${{ env.outputdir }}.tar.gz

